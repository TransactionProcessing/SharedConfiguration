name: Release

on:
  release:
    types: [published]

jobs:
  buildlinux:
    name: "Build Linux Docker"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Build Docker Images 
      run: |
        docker build . --file Dockerfile --tag stuartferguson/txnprocbase:latest --tag stuartferguson/txnprocbase:${{ steps.get_version.outputs.VERSION }}

    - name: Publish Images to Docker Hub
      run: |
        docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
        docker push stuartferguson/txnprocbase:latest
        docker push stuartferguson/txnprocbase:${{ steps.get_version.outputs.VERSION }}
   
  buildwindows:
    name: "Build Windows Docker"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Get the version
      id: get_version
      uses: battila7/get-version-action@v2
      
    - name: Build Docker Images 
      run: |
        docker build . --file DockerfileWindows --tag stuartferguson/txnprocbasewindows:latest --tag stuartferguson/txnprocbasewindows:${{ steps.get_version.outputs.version }}

    - name: Publish Images to Docker Hub
      run: |
        docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
        docker push stuartferguson/txnprocbasewindows:latest
        docker push stuartferguson/txnprocbasewindows:${{ steps.get_version.outputs.version }}
  
  buildconfigpackage:
    runs-on: ubuntu-latest
    if: "!github.event.release.prerelease"
    steps:
    - uses: actions/checkout@v2.3.4
    
    - name: Build Config Package
      run: |
         cd ./config
         zip -r ../sharedconfig.zip ./*

    - name: Upload the artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: sharedconfig
        path: sharedconfig.zip

  deploystaging:
     if: "!github.event.release.prerelease"
     runs-on: stagingserver
     needs: buildconfigpackage
     environment: staging
     name: "Deploy to Staging"

     steps:
     - name: Download the artifact
       uses: actions/download-artifact@v4.1.7
       with:
          name: sharedconfig
          
     - name: deploy config
       run: |
          Expand-Archive -Path sharedconfig.zip -DestinationPath "C:\home\txnproc\config" -Force

  deployproduction:
     if: "!github.event.release.prerelease"
     runs-on: productionserver
     needs: [buildconfigpackage, deploystaging]
     environment: production
     name: "Deploy to Production"
    
     steps:
     - name: Download the artifact
       uses: actions/download-artifact@v4.1.7
       with:
          name: sharedconfig
          
     - name: deploy config
       run: |
          Expand-Archive -Path sharedconfig.zip -DestinationPath "C:\home\txnproc\config" -Force
